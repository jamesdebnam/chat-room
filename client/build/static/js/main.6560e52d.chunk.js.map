{"version":3,"sources":["components/Posts/edit.svg","redux/loginSlice.js","components/LoginLink/LoginLink.js","components/Header/Header.js","redux/postsSlice.js","redux/errorSlice.js","components/Login/Login.js","components/Register/Register.js","components/PostInput/PostInput.js","redux/authorsSlice.js","components/Posts/Posts.js","components/UserPosts/UserPosts.js","components/EditPost/EditPost.js","components/App/App.js","redux/store.js","index.js"],"names":["module","exports","fetchUserLogin","createAsyncThunk","username","a","axios","get","response","data","registerUser","post","loginSlice","createSlice","name","initialState","isLoggedIn","userId","reducers","logout","extraReducers","fulfilled","state","action","payload","id","actions","LoginLink","login","useSelector","dispatch","useDispatch","className","to","onClick","Header","fetchPosts","pageNum","fetchUserPosts","request","fetchSinglePost","postId","addPost","input","editPost","info","put","body","inputVal","deletePost","delete","postsSlice","reset","posts","postIds","map","uniqIds","Set","filter","has","errorSlice","resetError","rejected","Login","useState","setInput","history","useHistory","error","useEffect","handleSubmit","e","errorMessage","document","querySelector","preventDefault","type","push","onSubmit","value","onChange","target","placeholder","Register","PostInput","inputValue","setInputValue","user_id","fetchPostAuthor","authorsSlice","Posts","author","setPageNum","uniqueIds","item","key","moment","utc","timestamp","local","fromNow","src","editIcon","UserPosts","props","currentUser","user","Number","match","params","EditPost","loaded","setLoaded","setInputVal","deleteCheck","setDeleteCheck","then","handleDelete","delBtn","innerText","style","backgroundColor","color","rows","cols","App","path","component","store","configureStore","reducer","ReactDOM","render","StrictMode","getElementById"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,kC,wYCK9BC,EAAiBC,YAC5B,uBAD4C,uCAE5C,WAAOC,GAAP,eAAAC,EAAA,sEACyBC,IAAMC,IAAN,qBAAwBH,IADjD,cACQI,EADR,yBAESA,EAASC,MAFlB,2CAF4C,uDAQjCC,EAAeP,YAC1B,qBAD0C,uCAE1C,WAAOC,GAAP,eAAAC,EAAA,sEACyBC,IAAMK,KAAN,aAAyBP,GADlD,cACQI,EADR,yBAESA,EAASC,MAFlB,2CAF0C,uDAQ/BG,EAAaC,YAAY,CACpCC,KAAM,QACNC,aAAc,CACZC,YAAY,EACZZ,SAAU,GACVa,OAAQ,MAEVC,SAAU,CACRC,OAAQ,WACN,MAAO,CACLH,YAAY,EACZZ,SAAU,GACVa,OAAQ,QAIdG,eAAa,mBACVlB,EAAemB,WAAY,SAACC,EAAOC,GAMlC,MALQ,CACNP,YAAY,EACZZ,SAAUmB,EAAOC,QAAQpB,SACzBa,OAAQM,EAAOC,QAAQC,OALhB,cASVf,EAAaW,WAAY,SAACC,EAAOC,GAMhC,MALQ,CACNP,YAAY,EACZZ,SAAUmB,EAAOC,QAAQpB,SACzBa,OAAQM,EAAOC,QAAQC,OAbhB,KAoBAN,EAAWP,EAAWc,QAAtBP,OClDA,SAASQ,IACtB,IAAMC,EAAQC,aAAY,SAACP,GAAD,OAAWA,EAAMM,SACrCE,EAAWC,cAEjB,OAAIH,EAAMZ,WAEN,yBAAKgB,UAAU,oBACb,uBAAGA,UAAU,gBAAb,YAAsCJ,EAAMxB,UAC5C,kBAAC,IAAD,CAAM6B,GAAE,gBAAWL,EAAMX,QAAUe,UAAU,YAC3C,4BAAQA,UAAU,4BAAlB,aAEF,kBAAC,IAAD,CAAMC,GAAG,KACP,4BACED,UAAU,mBACVE,QAAS,kBAAMJ,EAASX,OAF1B,YAWN,6BACE,kBAAC,IAAD,CAAMc,GAAG,aACP,4BAAQD,UAAU,mBAAlB,aAEF,kBAAC,IAAD,CAAMC,GAAG,UACP,4BAAQD,UAAU,mBAAlB,W,MC7BO,SAASG,IACtB,OACE,yBAAKH,UAAU,UACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,YACrB,wBAAIA,UAAU,yBAAd,gBAEF,kBAAC,EAAD,O,wBCTOI,EAAajC,YACxB,mBADwC,sBAExC,0CAAAE,EAAA,6DAAOgC,EAAP,+BAAiB,EAAjB,SACyB/B,IAAMC,IAAN,0BAA6B8B,IADtD,cACQ7B,EADR,yBAESA,EAASC,MAFlB,4CAMW6B,EAAiBnC,YAC5B,uBAD4C,uCAE5C,WAAOoC,GAAP,eAAAlC,EAAA,sEACyBC,IAAMK,KAAK,kBAAmB4B,GADvD,cACQ/B,EADR,yBAESA,EAASC,MAFlB,2CAF4C,uDAQjC+B,EAAkBrC,YAC7B,wBAD6C,uCAE7C,WAAOsC,GAAP,eAAApC,EAAA,sEACyBC,IAAMC,IAAN,qBAAwBkC,IADjD,cACQjC,EADR,yBAESA,EAASC,MAFlB,2CAF6C,uDAQlCiC,EAAUvC,YAAiB,gBAAD,uCAAkB,WAAOwC,GAAP,eAAAtC,EAAA,sEAChCC,IAAMK,KAAK,oBAAqBgC,GADA,cACjDnC,EADiD,yBAEhDA,EAASC,MAFuC,2CAAlB,uDAK1BmC,EAAWzC,YAAiB,iBAAD,uCAAmB,WAAO0C,GAAP,eAAAxC,EAAA,sEAClCC,IAAMwC,IAAN,qBAAwBD,EAAKpB,IAAM,CACxDsB,KAAMF,EAAKG,WAF4C,cACnDxC,EADmD,yBAIlDA,EAASC,MAJyC,2CAAnB,uDAO3BwC,EAAa9C,YAAiB,mBAAD,uCAAqB,WAAOsB,GAAP,eAAApB,EAAA,sEACtCC,IAAM4C,OAAN,qBAA2BzB,IADW,cACvDjB,EADuD,yBAEtDA,EAASC,MAF6C,2CAArB,uDAK7B0C,EAAatC,YAAY,CACpCC,KAAM,QACNC,aAAc,GACdG,SAAU,CACRkC,MAAO,iBAAM,KAEfhC,eAAa,mBACVgB,EAAWf,WAAY,SAACC,EAAOC,GAC9B,IAAI8B,EAAK,sBAAO/B,GAAP,YAAiBC,EAAOC,UAC7B8B,EAAUD,EAAME,KAAI,SAAC5C,GAAD,OAAUA,EAAKc,MACnC+B,EAAU,IAAIC,IAAIH,GACtB,OAAOD,EAAMK,QAAO,SAAC/C,GACnB,QAAI6C,EAAQG,IAAIhD,EAAKc,MACnB+B,EAAQN,OAAOvC,EAAKc,KACb,SARF,cAaViB,EAAQrB,WAAY,SAACC,EAAOC,GAC3B,MAAM,CAAEA,EAAOC,SAAf,mBAA2BF,OAdlB,cAgBVgB,EAAejB,WAAY,SAACC,EAAOC,GAClC,OAAOA,EAAOC,WAjBL,cAmBVgB,EAAgBnB,WAAY,SAACC,EAAOC,GACnC,MAAO,CAACA,EAAOC,YApBN,KAyBA4B,EAAUD,EAAWzB,QAArB0B,MCvEFQ,EAAa/C,YAAY,CACpCC,KAAM,QACNC,aAAc,GACdG,SAAU,CACR2C,WAAY,iBAAM,KAEpBzC,eAAa,mBACVlB,EAAe4D,UAAW,iBACzB,8DAFS,cAGV1B,EAAW0B,UAAW,iBAAM,0CAHlB,cAIVpD,EAAaoD,UAAW,iBAAM,8CAJpB,KAQAD,EAAeD,EAAWlC,QAA1BmC,W,MCVA,SAASE,IAAS,IAAD,EACJC,mBAAS,IADL,mBACvBrB,EADuB,KAChBsB,EADgB,KAExBnC,EAAWC,cACXmC,EAAUC,cACVC,EAAQvC,aAAY,SAACP,GAAD,OAAWA,EAAM8C,SAE3CC,qBAAU,WAERvC,EAAS+B,OACR,IAEH,IAAMS,EAAY,uCAAG,WAAOC,GAAP,eAAAlE,EAAA,6DAEfmE,EAAeC,SAASC,cAAc,WAC7B1C,UAAY,QACzBuC,EAAEI,iBACF7C,EAAS+B,KALU,SAMI/B,EAAS5B,EAAeyC,IAN5B,OAQG,mCARH,OAQNiC,KAA2CV,EAAQW,KAAK,KAEnEL,EAAaxC,UAAY,qBAVR,2CAAH,sDAalB,OACE,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,eAAd,UACA,0BAAM8C,SAAUR,EAActC,UAAU,cACtC,2BACEP,GAAG,WACHmD,KAAK,OACLG,MAAOpC,EACPX,UAAU,cACVgD,SAAU,SAACT,GAAD,OAAON,EAASM,EAAEU,OAAOF,QACnCG,YAAY,aAEd,4BAAQlD,UAAU,eAAe4C,KAAK,UAAtC,WAIF,uBAAG5C,UAAU,SAASoC,I,MCxCb,SAASe,IAAY,IAAD,EACPnB,mBAAS,IADF,mBAC1BrB,EAD0B,KACnBsB,EADmB,KAE3BnC,EAAWC,cACXmC,EAAUC,cACVC,EAAQvC,aAAY,SAACP,GAAD,OAAWA,EAAM8C,SAE3CC,qBAAU,WAERvC,EAAS+B,OACR,IAEH,IAAMS,EAAY,uCAAG,WAAOC,GAAP,eAAAlE,EAAA,6DAEfmE,EAAeC,SAASC,cAAc,WAC7B1C,UAAY,QACzBuC,EAAEI,iBACF7C,EAAS+B,KALU,SAOI/B,EAASpB,EAAa,CAAEN,SAAUuC,KAPtC,OASG,iCATH,OASNiC,KAAyCV,EAAQW,KAAK,KAEjEL,EAAaxC,UAAY,qBAXR,2CAAH,sDAclB,OACE,yBAAKA,UAAU,sBACb,wBAAIA,UAAU,kBAAd,YACA,wBAAIA,UAAU,qBAAd,+BACA,0BAAM8C,SAAUR,EAActC,UAAU,iBACtC,2BACE4C,KAAK,OACLG,MAAOpC,EACPX,UAAU,iBACVgD,SAAU,SAACT,GAAD,OAAON,EAASM,EAAEU,OAAOF,QACnCG,YAAY,aAEd,4BAAQlD,UAAU,kBAAkB4C,KAAK,UAAzC,iBAIF,uBAAG5C,UAAU,SAASoC,I,yCC5Cb,SAASgB,IAAa,IAAD,EACEpB,mBAAS,IADX,mBAC3BqB,EAD2B,KACfC,EADe,KAE5BxD,EAAWC,cACXd,EAASY,aAAY,SAACP,GAAD,OAAWA,EAAMM,MAAMX,UAQlD,OACE,0BAAM6D,SAPa,SAACP,GACpBA,EAAEI,iBACF7C,EAASY,EAAQ,CAAEK,KAAMsC,EAAYE,QAAStE,KAC9CqE,EAAc,MAKZ,2BACEV,KAAK,OACL5C,UAAU,aACVkD,YAAY,uBACZH,MAAOM,EACPL,SAAU,SAACT,GAAD,OAAOe,EAAcf,EAAEU,OAAOF,UAE1C,4BAAQ/C,UAAU,eAAlB,SCtBC,IAAMwD,EAAkBrF,YAC7B,0BAD6C,uCAE7C,WAAOsB,GAAP,eAAApB,EAAA,sEACyBC,IAAMC,IAAN,oBAAuBkB,IADhD,cACQjB,EADR,yBAESA,EAASC,MAFlB,2CAF6C,uDAQlCgF,EAAe5E,YAAY,CACtCC,KAAM,UACNC,aAAc,GACdK,cAAc,eACXoE,EAAgBnE,WAAY,SAACC,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QACrCF,EAAME,EAAQC,IAAMD,EAAQpB,c,iBCJnB,SAASsF,IACtB,IAAM5D,EAAWC,cAEXsB,EAAQxB,aAAY,SAACP,GAAD,OAAWA,EAAM+B,SACrCsC,EAAS9D,aAAY,SAACP,GAAD,OAAWA,EAAMqE,UACtCvB,EAAQvC,aAAY,SAACP,GAAD,OAAWA,EAAM8C,SACrCxC,EAAQC,aAAY,SAACP,GAAD,OAAWA,EAAMM,SANb,EAQAoC,mBAAS,GART,mBAQvB3B,EARuB,KAQduD,EARc,KAiC9B,OAvBAvB,qBAAU,WAGRvC,EAAS+B,KACT/B,EAASsB,KACTtB,EAASM,EAAWC,MACnB,IAEHgC,qBAAU,WAER,IAFc,EAEVwB,EAAS,YAAO,IAAIpC,IAAIJ,EAAME,KAAI,SAAC5C,GAAD,OAAUA,EAAK4E,aAFvC,cAGGM,GAHH,IAGd,gCAASC,EAAT,QAA4BhE,EAAS0D,EAAgBM,KAHvC,iCAIb,CAACzC,IAEJgB,qBAAU,WACR,IAAMG,EAAeC,SAASC,cAAc,eAC5CF,EAAaxC,UAAY,aAErBoC,IACFI,EAAaxC,UAAY,kCAE1B,CAACoC,IAGF,yBAAKpC,UAAU,mBACZJ,EAAMZ,WACL,kBAAC,EAAD,MAEA,uBAAGgB,UAAU,sBAAb,qCAGDqB,EAAME,KAAI,SAAC5C,GACV,OAAIA,EAAK4E,UAAY3D,EAAMX,OAEvB,yBAAK8E,IAAKpF,EAAKc,GAAIO,UAAU,kBAC3B,uBAAGA,UAAU,aAAarB,EAAKoC,MAC/B,kBAAC,IAAD,CACEd,GAAE,gBAAWtB,EAAK4E,SAClBvD,UAAU,yBAEV,uBAAGA,UAAU,eAAb,IAA6B2D,EAAOhF,EAAK4E,SAAzC,UACA,uBAAGvD,UAAU,kBAAb,KACKgE,IAAOC,IAAItF,EAAKuF,WAAWC,QAAQC,YAG1C,kBAAC,IAAD,CAAMnE,GAAE,gBAAWtB,EAAKc,KACtB,4BAAQO,UAAU,aAChB,yBAAKqE,IAAKC,SAOlB,yBAAKP,IAAKpF,EAAKc,GAAIO,UAAU,kBAC3B,uBAAGA,UAAU,aAAarB,EAAKoC,MAC/B,kBAAC,IAAD,CACEd,GAAE,gBAAWtB,EAAK4E,SAClBvD,UAAU,yBAEV,uBAAGA,UAAU,eAAb,IAA6B2D,EAAOhF,EAAK4E,UACzC,uBAAGvD,UAAU,kBAAb,KACKgE,IAAOC,IAAItF,EAAKuF,WAAWC,QAAQC,gBAMhD,4BACEpE,UAAU,kBACVE,QAAS,WACPJ,EAASM,EAAWC,EAAU,IAC9BuD,EAAWvD,EAAU,KAJzB,mBASA,uBAAGL,UAAU,cAAcoC,I,MCzFlB,SAASmC,EAAUC,GAChC,IAAM1E,EAAWC,cACXsB,EAAQxB,aAAY,SAACP,GAAD,OAAWA,EAAM+B,SACrCoD,EAAc5E,aAAY,SAACP,GAAD,OAAWA,EAAMM,MAAMX,UACjDyF,EAAO7E,aACX,SAACP,GAAD,OAAWA,EAAMqE,OAAOgB,OAAOH,EAAMI,MAAMC,OAAOpF,QASpD,OANA4C,qBAAU,WACHqC,GACH5E,EAAS0D,EAAgBmB,OAAOH,EAAMI,MAAMC,OAAOpF,MAErDK,EAASQ,EAAe,CAAEiD,QAASoB,OAAOH,EAAMI,MAAMC,OAAOpF,SAC5D,IAED,yBAAKO,UAAU,wBACb,wBAAIA,UAAU,kBAAd,IAAiC0E,GAChCrD,EAAME,KAAI,SAAC5C,GACV,OAAIA,EAAK4E,UAAYkB,EAEjB,yBAAKV,IAAKpF,EAAKc,GAAIO,UAAU,kBAC3B,uBAAGA,UAAU,aAAarB,EAAKoC,MAC/B,uBAAGf,UAAU,wCAAb,KACKgE,IAAOC,IAAItF,EAAKuF,WAAWC,QAAQC,WAExC,kBAAC,IAAD,CAAMnE,GAAE,gBAAWtB,EAAKc,KACtB,4BAAQO,UAAU,aAChB,yBAAKqE,IAAKC,SAOhB,yBAAKP,IAAKpF,EAAKc,GAAIO,UAAU,kBAC3B,uBAAGA,UAAU,aAAarB,EAAKoC,MAC/B,uBAAGf,UAAU,wCAAb,KACKgE,IAAOC,IAAItF,EAAKuF,WAAWC,QAAQC,gB,MCzCvC,SAASU,EAASN,GAC/B,IAAM1E,EAAWC,cACXd,EAASY,aAAY,SAACP,GAAD,OAAWA,EAAMM,MAAMX,UAFZ,EAGV+C,oBAAS,GAHC,mBAG/B+C,EAH+B,KAGvBC,EAHuB,KAIhCrG,EAAOkB,aAAY,SAACP,GAAD,OAAWA,EAAM+B,SAJJ,EAKNW,mBAAS,IALH,mBAK/BhB,EAL+B,KAKrBiE,EALqB,KAMhC/C,EAAUC,cANsB,EAOAH,oBAAS,GAPT,mBAO/BkD,EAP+B,KAOlBC,EAPkB,KAStC9C,qBAAU,WACRvC,EAASU,EAAgBgE,EAAMI,MAAMC,OAAOpF,KAAK2F,MAAK,SAAC5G,GACrDwG,GAAU,GACVC,EAAYzG,EAASgB,QAAQuB,WAE9B,IAEH,IAAMuB,EAAY,uCAAG,WAAOC,GAAP,SAAAlE,EAAA,6DACnBkE,EAAEI,iBADiB,SAEI7C,EACrBc,EAAS,CAAEnB,GAAI+E,EAAMI,MAAMC,OAAOpF,GAAIuB,cAHrB,OAKG,6BALH,OAKN4B,MAAqCV,EAAQW,KAAK,KAL5C,2CAAH,sDAQZwC,EAAY,uCAAG,4BAAAhH,EAAA,yDACd6G,EADc,iBAEXI,EAAS7C,SAASC,cAAc,iBAC/B6C,UAAY,gBACnBD,EAAOE,MAAMC,gBAAkB,iBAC/BH,EAAOE,MAAME,MAAQ,YACrBP,GAAe,GANE,wCAQMrF,EAASmB,EAAWuD,EAAMI,MAAMC,OAAOpF,KAR7C,QASK,+BATL,OASJmD,MAAuCV,EAAQW,KAAK,KAThD,4CAAH,qDAalB,OAAIkC,EACE9F,IAAWN,EAAK,GAAG4E,QAEnB,yBAAKvD,UAAU,uBACb,yCACA,0BAAM8C,SAAUR,GACd,8BACES,MAAO/B,EACPgC,SAAU,SAACT,GAAD,OAAO0C,EAAY1C,EAAEU,OAAOF,QACtC4C,KAAK,KACLC,KAAK,KACL5F,UAAU,oBAEZ,6BACA,4BAAQ4C,KAAK,SAAS5C,UAAU,8BAAhC,SAIF,4BAAQA,UAAU,wBAAwBE,QAASmF,GAAnD,gBAQJ,yBAAKrF,UAAU,uBACb,0EACA,2BAAIrB,EAAK,GAAGoC,OAIX,KChEM,SAAS8E,IACtB,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YAAYC,UAAWxB,IACnC,kBAAC,IAAD,CAAOuB,KAAK,YAAYC,UAAWjB,IACnC,kBAAC,IAAD,CAAOgB,KAAK,KACV,kBAAC,EAAD,SCnBV,IASeE,EATDC,YAAe,CAC3BC,QAAS,CACPtG,MAAOhB,EAAWsH,QAClB9D,MAAOR,EAAWsE,QAClB7E,MAAOF,EAAW+E,QAClBvC,OAAQF,EAAayC,WCHzBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,SAINvD,SAAS6D,eAAe,W","file":"static/js/main.6560e52d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/edit.ce82bc88.svg\";","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// axios.defaults.baseURL = \"http://localhost:5000\";\n\nexport const fetchUserLogin = createAsyncThunk(\n  \"login/fetchUserLogin\",\n  async (username) => {\n    const response = await axios.get(`/api/login/${username}`);\n    return response.data;\n  }\n);\n\nexport const registerUser = createAsyncThunk(\n  \"login/registerUser\",\n  async (username) => {\n    const response = await axios.post(`/api/login`, username);\n    return response.data;\n  }\n);\n\nexport const loginSlice = createSlice({\n  name: \"login\",\n  initialState: {\n    isLoggedIn: false,\n    username: \"\",\n    userId: null,\n  },\n  reducers: {\n    logout: () => {\n      return {\n        isLoggedIn: false,\n        username: \"\",\n        userId: null,\n      };\n    },\n  },\n  extraReducers: {\n    [fetchUserLogin.fulfilled]: (state, action) => {\n      state = {\n        isLoggedIn: true,\n        username: action.payload.username,\n        userId: action.payload.id,\n      };\n      return state;\n    },\n    [registerUser.fulfilled]: (state, action) => {\n      state = {\n        isLoggedIn: true,\n        username: action.payload.username,\n        userId: action.payload.id,\n      };\n      return state;\n    },\n  },\n});\n\nexport const { logout } = loginSlice.actions;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./LoginLink.css\";\nimport { logout } from \"../../redux/loginSlice\";\n\nexport default function LoginLink() {\n  const login = useSelector((state) => state.login);\n  const dispatch = useDispatch();\n  // Conditional rendering, whether the user is logged in\n  if (login.isLoggedIn) {\n    return (\n      <div className=\"logout-container\">\n        <p className=\"welcome-text\">Welcome, {login.username}</p>\n        <Link to={`/user/${login.userId}`} className=\"my-posts\">\n          <button className=\"login-btn login my-posts\">My Posts</button>\n        </Link>\n        <Link to=\"/\">\n          <button\n            className=\"logout login-btn\"\n            onClick={() => dispatch(logout())}\n          >\n            Logout\n          </button>\n        </Link>\n      </div>\n    );\n  }\n  return (\n    <div>\n      <Link to=\"/register\">\n        <button className=\"login-btn login\">Register</button>\n      </Link>\n      <Link to=\"/login\">\n        <button className=\"login-btn login\">Login</button>\n      </Link>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport LoginLink from \"../LoginLink/LoginLink\";\nimport \"./Header.css\";\n\nexport default function Header() {\n  return (\n    <div className=\"header\">\n      <Link to=\"/\" className=\"nav-item\">\n        <h1 className=\"nav-item__chatty-time\">Chatty Time</h1>\n      </Link>\n      <LoginLink />\n    </div>\n  );\n}\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const fetchPosts = createAsyncThunk(\n  \"posts/fetchPosts\",\n  async (pageNum = 1) => {\n    const response = await axios.get(`/api/posts/page/${pageNum}`);\n    return response.data;\n  }\n);\n\nexport const fetchUserPosts = createAsyncThunk(\n  \"posts/fetchUserPosts\",\n  async (request) => {\n    const response = await axios.post(\"/api/posts/user\", request);\n    return response.data;\n  }\n);\n\nexport const fetchSinglePost = createAsyncThunk(\n  \"posts/fetchSinglePost\",\n  async (postId) => {\n    const response = await axios.get(`/api/posts/${postId}`);\n    return response.data;\n  }\n);\n\nexport const addPost = createAsyncThunk(\"posts/addPost\", async (input) => {\n  const response = await axios.post(\"/api/posts/page/1\", input);\n  return response.data;\n});\n\nexport const editPost = createAsyncThunk(\"posts/editPost\", async (info) => {\n  const response = await axios.put(`/api/posts/${info.id}`, {\n    body: info.inputVal,\n  });\n  return response.data;\n});\n\nexport const deletePost = createAsyncThunk(\"posts/deletePost\", async (id) => {\n  const response = await axios.delete(`/api/posts/${id}`);\n  return response.data;\n});\n\nexport const postsSlice = createSlice({\n  name: \"posts\",\n  initialState: [],\n  reducers: {\n    reset: () => [],\n  },\n  extraReducers: {\n    [fetchPosts.fulfilled]: (state, action) => {\n      let posts = [...state, ...action.payload];\n      let postIds = posts.map((post) => post.id);\n      let uniqIds = new Set(postIds);\n      return posts.filter((post) => {\n        if (uniqIds.has(post.id)) {\n          uniqIds.delete(post.id);\n          return true;\n        }\n        return false;\n      });\n    },\n    [addPost.fulfilled]: (state, action) => {\n      return [action.payload, ...state];\n    },\n    [fetchUserPosts.fulfilled]: (state, action) => {\n      return action.payload;\n    },\n    [fetchSinglePost.fulfilled]: (state, action) => {\n      return [action.payload];\n    },\n  },\n});\n\nexport const { reset } = postsSlice.actions;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { fetchUserLogin, registerUser } from \"./loginSlice\";\nimport { fetchPosts } from \"./postsSlice\";\n\nexport const errorSlice = createSlice({\n  name: \"error\",\n  initialState: \"\",\n  reducers: {\n    resetError: () => \"\",\n  },\n  extraReducers: {\n    [fetchUserLogin.rejected]: () =>\n      \"Sorry, that username doesn't exist. Have you registered?\",\n    [fetchPosts.rejected]: () => \"You've reached the end of all posts!\",\n    [registerUser.rejected]: () => \"Sorry, that username is already taken...\",\n  },\n});\n\nexport const { resetError } = errorSlice.actions;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { fetchUserLogin } from \"../../redux/loginSlice\";\nimport { resetError } from \"../../redux/errorSlice\";\nimport \"./Login.css\";\n\nexport default function Login() {\n  const [input, setInput] = useState(\"\");\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const error = useSelector((state) => state.error);\n\n  useEffect(() => {\n    // Resets error on mount\n    dispatch(resetError());\n  }, []);\n\n  const handleSubmit = async (e) => {\n    // Resets error message and styling on submit\n    let errorMessage = document.querySelector(\".error\");\n    errorMessage.className = \"error\";\n    e.preventDefault();\n    dispatch(resetError());\n    const response = await dispatch(fetchUserLogin(input));\n    // Programmatic navigation if promise is fulfilled, else the error is shown\n    if (response.type === \"login/fetchUserLogin/fulfilled\") history.push(\"/\");\n    else {\n      errorMessage.className = \"error error-active\";\n    }\n  };\n  return (\n    <div className=\"login-container\">\n      <h1 className=\"login-title\">Log In</h1>\n      <form onSubmit={handleSubmit} className=\"login-form\">\n        <input\n          id=\"username\"\n          type=\"text\"\n          value={input}\n          className=\"login-input\"\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Username\"\n        ></input>\n        <button className=\"login-submit\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n      <p className=\"error\">{error}</p>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { registerUser } from \"../../redux/loginSlice\";\nimport { resetError } from \"../../redux/errorSlice\";\nimport \"./Register.css\";\n\nexport default function Register() {\n  const [input, setInput] = useState(\"\");\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const error = useSelector((state) => state.error);\n\n  useEffect(() => {\n    //Resets the error message on component mount\n    dispatch(resetError());\n  }, []);\n\n  const handleSubmit = async (e) => {\n    // Resets error styling and message on submit\n    let errorMessage = document.querySelector(\".error\");\n    errorMessage.className = \"error\";\n    e.preventDefault();\n    dispatch(resetError());\n    // Dispatches a POST request to the API to register the user\n    const response = await dispatch(registerUser({ username: input }));\n    // Programmatic navigation if the promise is fulfilled, else the error is shown\n    if (response.type === \"login/registerUser/fulfilled\") history.push(\"/\");\n    else {\n      errorMessage.className = \"error error-active\";\n    }\n  };\n  return (\n    <div className=\"register-container\">\n      <h1 className=\"register-title\">Register</h1>\n      <h2 className=\"register-subtitle\">All you need is a username!</h2>\n      <form onSubmit={handleSubmit} className=\"register-form\">\n        <input\n          type=\"text\"\n          value={input}\n          className=\"register-input\"\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Username\"\n        ></input>\n        <button className=\"register-submit\" type=\"submit\">\n          Register me!\n        </button>\n      </form>\n      <p className=\"error\">{error}</p>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./PostInput.css\";\nimport { addPost } from \"../../redux/postsSlice\";\n\nexport default function PostInput() {\n  const [inputValue, setInputValue] = useState(\"\");\n  const dispatch = useDispatch();\n  const userId = useSelector((state) => state.login.userId);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addPost({ body: inputValue, user_id: userId }));\n    setInputValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"post-input\"\n        placeholder=\"What's on your mind?\"\n        value={inputValue}\n        onChange={(e) => setInputValue(e.target.value)}\n      />\n      <button className=\"post-submit\">Post</button>\n    </form>\n  );\n}\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const fetchPostAuthor = createAsyncThunk(\n  \"authors/fetchPostAuthor\",\n  async (id) => {\n    const response = await axios.get(`/api/user/${id}`);\n    return response.data;\n  }\n);\n\nexport const authorsSlice = createSlice({\n  name: \"authors\",\n  initialState: {},\n  extraReducers: {\n    [fetchPostAuthor.fulfilled]: (state, { payload }) => {\n      state[payload.id] = payload.username;\n    },\n  },\n});\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\n\nimport \"./Posts.css\";\nimport PostInput from \"../PostInput/PostInput\";\nimport { fetchPosts, reset } from \"../../redux/postsSlice\";\nimport { fetchPostAuthor } from \"../../redux/authorsSlice\";\nimport { resetError } from \"../../redux/errorSlice\";\nimport editIcon from \"./edit.svg\";\n\nexport default function Posts() {\n  const dispatch = useDispatch();\n\n  const posts = useSelector((state) => state.posts);\n  const author = useSelector((state) => state.author);\n  const error = useSelector((state) => state.error);\n  const login = useSelector((state) => state.login);\n\n  const [pageNum, setPageNum] = useState(1);\n\n  useEffect(() => {\n    // Resets everything and fetches first page of posts on mount\n\n    dispatch(resetError());\n    dispatch(reset());\n    dispatch(fetchPosts(pageNum));\n  }, []);\n\n  useEffect(() => {\n    // When posts change, fetches usernames from their ids and maps them to the posts\n    let uniqueIds = [...new Set(posts.map((post) => post.user_id))];\n    for (let item of uniqueIds) dispatch(fetchPostAuthor(item));\n  }, [posts]);\n\n  useEffect(() => {\n    const errorMessage = document.querySelector(\".post-error\");\n    errorMessage.className = \"post-error\";\n    // On a new error, the classname is changed of the error to give it styling\n    if (error) {\n      errorMessage.className = \"post-error post-error-active\";\n    }\n  }, [error]);\n\n  return (\n    <div className=\"posts-container\">\n      {login.isLoggedIn ? (\n        <PostInput />\n      ) : (\n        <p className=\"post-login-message\">Log in or register to make a post</p>\n      )}\n\n      {posts.map((post) => {\n        if (post.user_id === login.userId) {\n          return (\n            <div key={post.id} className=\"post-container\">\n              <p className=\"post-body\">{post.body}</p>\n              <Link\n                to={`/user/${post.user_id}`}\n                className=\"post-author-container\"\n              >\n                <p className=\"post-author\">@{author[post.user_id]} (you)</p>\n                <p className=\"post-timestamp\">\n                  ~ {moment.utc(post.timestamp).local().fromNow()}\n                </p>\n              </Link>\n              <Link to={`/post/${post.id}`}>\n                <button className=\"post-edit\">\n                  <img src={editIcon} />\n                </button>\n              </Link>\n            </div>\n          );\n        }\n        return (\n          <div key={post.id} className=\"post-container\">\n            <p className=\"post-body\">{post.body}</p>\n            <Link\n              to={`/user/${post.user_id}`}\n              className=\"post-author-container\"\n            >\n              <p className=\"post-author\">@{author[post.user_id]}</p>\n              <p className=\"post-timestamp\">\n                ~ {moment.utc(post.timestamp).local().fromNow()}\n              </p>\n            </Link>\n          </div>\n        );\n      })}\n      <button\n        className=\"posts-next-page\"\n        onClick={() => {\n          dispatch(fetchPosts(pageNum + 1));\n          setPageNum(pageNum + 1);\n        }}\n      >\n        Load more posts\n      </button>\n      <p className=\"post-error\">{error}</p>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\n\nimport editIcon from \"../Posts/edit.svg\";\nimport { fetchUserPosts } from \"../../redux/postsSlice\";\nimport { fetchPostAuthor } from \"../../redux/authorsSlice\";\nimport \"./UserPosts.css\";\n\nexport default function UserPosts(props) {\n  const dispatch = useDispatch();\n  const posts = useSelector((state) => state.posts);\n  const currentUser = useSelector((state) => state.login.userId);\n  const user = useSelector(\n    (state) => state.author[Number(props.match.params.id)]\n  );\n\n  useEffect(() => {\n    if (!user) {\n      dispatch(fetchPostAuthor(Number(props.match.params.id)));\n    }\n    dispatch(fetchUserPosts({ user_id: Number(props.match.params.id) }));\n  }, []);\n  return (\n    <div className=\"user-posts-container\">\n      <h1 className=\"username-title\">@{user}</h1>\n      {posts.map((post) => {\n        if (post.user_id === currentUser) {\n          return (\n            <div key={post.id} className=\"post-container\">\n              <p className=\"post-body\">{post.body}</p>\n              <p className=\"post-timestamp post-author-container\">\n                ~ {moment.utc(post.timestamp).local().fromNow()}\n              </p>\n              <Link to={`/post/${post.id}`}>\n                <button className=\"post-edit\">\n                  <img src={editIcon} />\n                </button>\n              </Link>\n            </div>\n          );\n        } else {\n          return (\n            <div key={post.id} className=\"post-container\">\n              <p className=\"post-body\">{post.body}</p>\n              <p className=\"post-timestamp post-author-container\">\n                ~ {moment.utc(post.timestamp).local().fromNow()}\n              </p>\n            </div>\n          );\n        }\n      })}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./EditPost.css\";\nimport { fetchSinglePost, editPost, deletePost } from \"../../redux/postsSlice\";\n\nexport default function EditPost(props) {\n  const dispatch = useDispatch();\n  const userId = useSelector((state) => state.login.userId);\n  const [loaded, setLoaded] = useState(false);\n  const post = useSelector((state) => state.posts);\n  const [inputVal, setInputVal] = useState(\"\");\n  const history = useHistory();\n  const [deleteCheck, setDeleteCheck] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchSinglePost(props.match.params.id)).then((response) => {\n      setLoaded(true);\n      setInputVal(response.payload.body);\n    });\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const response = await dispatch(\n      editPost({ id: props.match.params.id, inputVal })\n    );\n    if (response.type === \"posts/editPost/fulfilled\") history.push(\"/\");\n  };\n\n  const handleDelete = async () => {\n    if (!deleteCheck) {\n      const delBtn = document.querySelector(\".post-delete\");\n      delBtn.innerText = \"Are you sure?\";\n      delBtn.style.backgroundColor = \"rgb(189, 0, 0)\";\n      delBtn.style.color = \"aliceblue\";\n      setDeleteCheck(true);\n    } else {\n      const response = await dispatch(deletePost(props.match.params.id));\n      if (response.type === \"posts/deletePost/fulfilled\") history.push(\"/\");\n    }\n  };\n\n  if (loaded) {\n    if (userId === post[0].user_id) {\n      return (\n        <div className=\"edit-post-container\">\n          <h2>Edit Post</h2>\n          <form onSubmit={handleSubmit}>\n            <textarea\n              value={inputVal}\n              onChange={(e) => setInputVal(e.target.value)}\n              rows=\"10\"\n              cols=\"40\"\n              className=\"edit-post-input\"\n            />\n            <br />\n            <button type=\"submit\" className=\"post-edit post-edit-submit\">\n              Edit\n            </button>\n          </form>\n          <button className=\"post-edit post-delete\" onClick={handleDelete}>\n            Delete Post\n          </button>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"edit-post-container\">\n        <h2>This is not your post! Have you logged in?</h2>\n        <p>{post[0].body}</p>\n      </div>\n    );\n  }\n  return null;\n}\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Header from \"../Header/Header\";\nimport Login from \"../Login/Login\";\nimport Register from \"../Register/Register\";\nimport Posts from \"../Posts/Posts\";\nimport UserPosts from \"../UserPosts/UserPosts\";\nimport EditPost from \"../EditPost/EditPost\";\n\nexport default function App() {\n  return (\n    <div>\n      <Header />\n      <Switch>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n        <Route path=\"/user/:id\" component={UserPosts} />\n        <Route path=\"/post/:id\" component={EditPost} />\n        <Route path=\"/\">\n          <Posts />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { loginSlice } from \"./loginSlice\";\nimport { postsSlice } from \"./postsSlice\";\nimport { authorsSlice } from \"./authorsSlice\";\nimport { errorSlice } from \"./errorSlice\";\n\nconst store = configureStore({\n  reducer: {\n    login: loginSlice.reducer,\n    error: errorSlice.reducer,\n    posts: postsSlice.reducer,\n    author: authorsSlice.reducer,\n  },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport App from \"./components/App/App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}